// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["omitApi"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(uuid())
  username String   @unique
  password String
  name     String
  email    String?
  address  String?
  isAdmin  Boolean  @default(false)
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model VehicleBrand {
  id          String        @id @default(uuid())
  name        String
  country     String
  logoUri     String
  websiteUri  String
  description String
  VehicleType VehicleType[]
  createAt    DateTime      @default(now())
  updateAt    DateTime      @updatedAt
}

model VehicleType {
  id             String         @id @default(uuid())
  name           String
  description    String
  isOnroad       Boolean
  VehicleBrand   VehicleBrand   @relation(fields: [vehicleBrandId], references: [id], onDelete: Cascade)
  vehicleBrandId String
  VehicleModel   VehicleModel[]
  createAt       DateTime       @default(now())
  updateAt       DateTime       @updatedAt
}

model VehicleModel {
  id            String      @id @default(uuid())
  name          String
  VehicleType   VehicleType @relation(fields: [vehicleTypeId], references: [id], onDelete: Cascade)
  vehicleTypeId String
  description   String
  PriceList     PriceList[]
  createAt      DateTime    @default(now())
  updateAt      DateTime    @updatedAt
}

model VehicleYear {
  id        String      @id @default(uuid())
  year      String      @db.Char(4)
  PriceList PriceList[]
  createAt  DateTime    @default(now())
  updateAt  DateTime    @updatedAt
}

model PriceList {
  id             String       @id @default(uuid())
  code           String
  price          Int
  VehicleYear    VehicleYear  @relation(fields: [vehicleYearId], references: [id], onDelete: Cascade)
  vehicleYearId  String
  VehicleModel   VehicleModel @relation(fields: [vehicleModelId], references: [id], onDelete: Cascade)
  vehicleModelId String
  createAt       DateTime     @default(now())
  updateAt       DateTime     @updatedAt
}
